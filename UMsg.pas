unit UMsg;

interface
resourcestring
  EXPR_EXPECTED        ='expression expected';
  CONSTANT_EXPR_EXPECED ='constant expression expected';
  TYPE_NAME_EXPECTED   ='type name expected';
  INVALIDTYPE          ='invalid type';
  REFERENCE_TYPE_EXPEC ='reference type expected';
  TYPED_PTR_EXPECTED   ='typed pointer expected';
  INIT_REF_ERROR       ='initialization of reference';
  INVALID_VOID_USAGE   ='invalid void usage';
  TYPE_REQUIRED        ='type required';
  CLASS_TYPE_EXPECTD   ='class type required';
  INTERFACE_TYPE_EXPECTD ='interface type required';
  UNSUPPORTED_INTERFACE ='interface unsupported';
  STATIC_INVALID_USAGE ='static invalid';
  FUNC_NAME_EXPECTED   ='function name expected';
  FUNC_EXPECTED        ='function expected';
  INSTANCE_EXPECTED    ='instance expected';
  SCOPE_EXPECTED       ='scope expected';
  ABSTRACT_FUNC_DEF    ='absctract declaration expected';
  ABSTRACT_FUNC_CALL   ='absctract function call';
  TYPE_ERR             ='type error';
  CONSTRUCTOR_TYPE_ERR ='constructor type error';
  STATIC_FUNC_EXPECTED ='static function expected';
  FUNC_SIGNATURE_ERR   ='function signature error';
  PARAMS_NAMES_ERR     ='param with diffrent name';
  ARRAY_EXPECTED       ='array expected';
  REDECLARED_FUNC      ='redeclared function';
  IMPLEMENTATION_NEEDED='implementation needed';
  MODIFIER_REDICLARED  ='rediclared modifier';
  INVALID_MODIFIER     ='invalid modifier';
  STATIC_NEEDED        ='static required';
  FORWARD_NEEDED       ='forward declaration required';
  INT_TYPE_REQUIRED    ='integer type needed';
  INVALID_INSTRUCTION  ='Invalid instruction';
  INVALID_SET_RANGE    ='Invalid set range';
  NESTED_FUNC_ERR      ='nested function err';
  ERRCODE              ='error code';
  TYPE_OVERFLOW        ='type overflow';
  LVALUE_EXPECTED      ='lvalue expected';
  RVALUE_EXPECTED      ='rvalue expected';
  ADDRESS_EXPECTED     ='variable expected';
  POINTER_EXPECTED     ='pointer expected';
  ORDINAL_TYPE_EXPECTED='ordinal type expected';
  UNSUPPORTED_OPERATION='unsupported operation';
  INCOMPATIBLE_TYPE    ='incompatible type';
  BOOL_EXPR_EXPECTED   ='boolean expression expected';
  FUNC_CALL_ERROR      ='call error';
  AMBIG_FUNC_CALL      ='ambiguous call';
  BITS_FIELDS_ERROR    ='bitsfield type error';
  INITIALIZER_ERROR    ='initializer error';
  CHAR_ARRAY_EXPECTED  ='char array expected';
  RETURN_TYPE_ERROR    ='return type error';
  TRY_HANDLER_EXPECTED ='finally\catch expected';
  LABEL_EXPECTED       ='label expected';
  LABEL_EXISTS         ='label exists';
  TRY_SECTION_ERROR    ='try jump error';
  LOOP_EXPECTED        ='loop expected';
  INSTRUCTION_EXPECTED ='instruction expected';
  COND_EXPECTED        ='invalid condition';
  INVALID_INDEX        ='invalid index';
  BITS_INT_OVER        ='invalid bits count';
  BOOL_ERR_CONV        ='can not convert to boolean';
  FLOAT_ERR_CONV       ='can not convert to float';
  INT_ERR_CONV         ='can not convert to integer';
  CHAR_ERR_CONV        ='can not convert to char';
  PTR_ERR_CONV         ='can not convert to Pointer';
  NO_ACTIVE_FUNC       ='no active function';
  NO_ANSCESROR         ='no anscestor';
  NO_ACTIVE_CLASS      ='no active class';
  NO_JUMP_HANDLER      ='no jump in handler';
  CLASS_MEMBER_EXPECTED='class member expected';
  INSTANCE_MEMBER_EXPECTED='instance member expected';
  WARN_BOOL_EVAL       ='expression always to %s';
  DIV_BY_ZERO          ='division by zero';
  SEPARATOR_EXPECTED   =''','' or '';'' expected';
  INSTSEP_EXPECTED     =''';'' expected';
  SYM_EXPECTED         ='expected';
  SELF_EXPECTED        ='no self expected';
  MAIN_EXPECTED        ='main not found';
  INVALID_MAIN_RET     ='invalid main return type';
  INVALID_CHAR         ='invalid char';
  VISIBILITY_LEVEL_ERR ='visibility level error';
  ABSTRACT_BIND_ERROR  ='can not bind abstract method';
  ANCESTOR_MEMBER_ERR  ='can not find "%s" in ancestor';
  BIND_INTRF_VIRT_ERR  ='bind virtual function to interface';
  BIND_INTRF_ERR       ='bind interface error';
  OBJECT_DEF_ERROR     ='can not find object definition';
  IUNKNOWN_DEF_ERROR   ='can not find global interface definition';
  EXCEPT_SECTION_EXPEC ='exception section expected';
  EMPTY_CODE           ='no code source';
implementation

end.
